env:
  # oddly, "es6" needs to be true despite ecmaVersion 2017, or else objects
  # like Symbol are considered undefined
  es6: true
  node: true
parserOptions:
  ecmaVersion: 2017
  sourceType: 'module'
  ecmaFeatures:
    impliedStrict: true
rules:
  array-bracket-spacing:
    - 2
    - 'always'
  arrow-body-style: 2
  arrow-parens:
    - 2
    - 'as-needed'
  arrow-spacing: 2
  block-spacing: 2
  brace-style: 2
  camelcase: 0 # off because it makes no exceptions for numeric parts
  comma-dangle: 0 # off because it doesn’t really understand elision
  comma-spacing: 2
  comma-style: 0 # off because it doesn’t really understand elision
  computed-property-spacing: 2
  constructor-super: 2
  curly: 2
  dot-location:
    - 2
    - 'property'
  dot-notation:
    - 2
    - allowPattern: "^[A-Z_][A-Za-z_]*$"
  eol-last: 2
  eqeqeq: 2
  func-call-spacing: 2
  func-style: 2
  generator-star-spacing:
    - 2
    - before: true
      after: true
  indent:
    - 2
    - 2
    - MemberExpression: 1
      SwitchCase: 1
  key-spacing:
    - 2
    - mode: 'minimum'
  linebreak-style: 2
  max-len:
    - 2
    - 80
  new-cap:
    - 2
    - capIsNewExceptionPattern: (^|\.)[^a-z]+$
      newIsCapExceptionPattern: (^|\.)[^a-z]+$
  new-parens: 2
  no-caller: 2
  no-case-declarations: 2
  no-catch-shadow: 2
  no-class-assign: 2
  no-const-assign: 2
  no-constant-condition:
    - 2
    - checkLoops: false
  no-delete-var: 2
  no-dupe-args: 2
  no-dupe-class-members: 2
  no-dupe-keys: 2
  no-duplicate-case: 2
  no-else-return: 2
  no-empty-character-class: 2
  no-empty: 2
  no-ex-assign: 2
  no-extend-native: 2
  no-extra-bind: 2
  no-extra-boolean-cast: 2
  no-extra-label: 2
  no-extra-semi: 2
  no-func-assign: 2
  no-global-assign: 2
  no-implicit-globals: 2
  no-invalid-regexp: 2
  no-invalid-this: 0 # Not what it sounds like, counts some valid as invalid
  no-irregular-whitespace: 2
  no-iterator: 2
  no-label-var: 2
  no-lone-blocks: 2
  no-lonely-if: 2
  no-multiple-empty-lines: 2
  no-new-object: 2
  no-new-symbol: 2
  no-new-wrappers: 2
  no-obj-calls: 2
  no-octal-escape: 2
  no-octal: 2
  no-param-reassign: 2
  no-proto: 2
  no-redeclare: 2
  no-restricted-globals:
    - 2
    - 'exports'
    - 'isNaN'
    - 'module'
    - 'parseFloat'
    - 'parseInt'
    - 'require'
  no-self-assign: 2
  no-self-compare: 2
  no-sync: 2
  no-tabs: 2
  no-this-before-super: 2
  no-throw-literal: 2
  no-trailing-spaces: 2
  no-undef-init: 2
  no-undef: 2
  no-unexpected-multiline: 2
  no-unneeded-ternary: 2
  no-unreachable: 2
  no-unsafe-finally: 2
  no-unsafe-negation: 2
  no-unused-labels: 2
  no-unused-vars: 2
  no-use-before-define: 0 # Rule is broken? Does not seem to acknowledge scope
  no-useless-call: 2
  no-useless-computed-key: 2
  no-useless-concat: 2
  no-useless-constructor: 2
  no-useless-escape: 2
  no-useless-rename: 2
  no-var: 2
  no-whitespace-before-property: 2
  no-with: 2
  object-curly-spacing:
    - 2
    - 'always'
  object-shorthand: 2
  operator-assignment: 2
  operator-linebreak:
    - 2
    - 'after'
    - overrides:
        '?': 'ignore'
        ':': 'ignore'
  prefer-arrow-callback: 2
  prefer-const: 2
  prefer-numeric-literals: 2
  prefer-reflect:
    - 2
    - exceptions:
      - 'delete'
  prefer-rest-params: 0 # this one is obnoxious when you need both
  prefer-spread: 2
  prefer-template: 2
  quote-props:
    - 2
    - 'consistent-as-needed'
    - keywords: false
      numbers: false
  quotes:
    - 2
    - 'single'
    - allowTemplateLiterals: true
  require-yield: 2
  rest-spread-spacing: 2
  semi-spacing: 2
  semi: 2
  sort-keys: 0 # annoying since you can’t sep. groupings with comments
  space-before-blocks: 2
  space-before-function-paren:
    - 2
    - 'never'
  space-in-parens: 2
  space-infix-ops: 0 # change to 2 when they fix default assignment
  space-unary-ops: 2
  strict: 2
  template-curly-spacing:
    - 2
    - 'always'
  valid-typeof: 2
  yield-star-spacing:
    - 2
    - before: true
      after: true

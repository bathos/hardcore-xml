
export default {
	// Class Type Errors
	anyEmptyQuantifier: 'When type is ANY or EMPTY, quantifier is invalid.',
	attDefMembersArr: 'Attribute definition members must be an array.',
	attDefMembersConflict: 'Attribute definition type disallows members.',
	attDefMembersString: 'Attribute definition member was invalid value.',
	duplicateAttrKey: 'An element cannot have the same attribute key twice.',
	elementDeclMalformed: 'Element declaration malformed.',
	illegalChild: 'Illegal child.',
	illegalChildren: 'Illegal children.',
	illegalDoctype: 'Document may only have one DTD, before the root.',
	illegalRCEG: 'The root ChildElementGroup cannot be moved.',
	illegalRoot: 'Document cannot have multiple root elements.',
	invalidAttDefType: 'Attribute definition type invalid.',
	invalidCDATA: 'CDATA section content invalid.',
	invalidCEGType: 'Element children type invalid.',
	invalidComment: 'Comment content invalid.',
	invalidConditionalKeyword: 'Conditional section keyword invalid.',
	invalidContentSpec: 'Element declaration has an invalid content spec.',
	invalidDefaultType: 'Attribute definition ‘default’ type invalid.',
	invalidInstruction: 'Processing instruction’s instruction invalid.',
	invalidName: 'Name invalid.',
	invalidNDATAStr: 'NDATA value invalid.',
	invalidPID: 'Public ID name invalid.',
	invalidPR: 'Parameter reference invalid.',
	invalidQuantifier: 'Quantifier invalid.',
	invalidSDD: 'Standalone value invalid.',
	invalidSID: 'System ID name invalid.',
	invalidTarget: 'Processing instruction target invalid.',
	invalidText: 'Text node content invalid.',
	invalidValue: 'Value invalid.',
	invalidVersion: 'Version number invalid.',
	malformedAttrDef: 'Attribute definition is malformed.',
	malformedDeclaration: 'Declaration is malformed.',
	malformedDocument: 'Document is malformed.',
	malformedDTD: 'Doctype is malformed.',
	mismatchedCEGType: 'When type is ANY or EMPTY, there may not be children.',
	mixedDepth: 'When type is MIXED, children may not be nested.',
	mixedQuantifier: 'When type is MIXED, quantifier may only be * or \'\'.',
	wrongNodeType: 'Not the expected node type.',

	// Parsing Type Errors
	invalidParseTarget: 'Parsing target was invalid.',

	// Parsing Syntax Errors
	completeGarbage: 'Garbage in, garbage out :(',
	illegalAttrChar: 'Encountered illegal chars in Element attribute',
	illegalInDTDE: 'Illegal node type encountered in DoctypeExternal',
	illegalInElement: 'Illegal node type encountered in Element',
	illegalNode: 'Encountered node which is illegal in its context',
	illegalOrMisplacedInDoc: 'Encountered node in illegal position in Document',
	incompatibleContentSpecType: 'ContentSpec type is self-contradicting',
	incompleteTarget: target => `Did not complete valid ${ target }.`,
	malformedAttList: 'Malformed attribute list buddy',
	malformedClosingTag: 'Malformed closing tag',
	malformedContentSpec: 'Malformed content spec in ElementDeclaration',
	malformedContentSpecParen: 'Malformed content spec has imbalanced parens',
	malformedContentSpecSep: 'Malformed content spec mixed seperators',
	malformedEmptyTag: 'Malformed empty Element tag',
	malformedEntityDecl: 'Malformed EntityDeclaration',
	malformedNotationDecl: 'Malformed NotationDeclaration',
	malformedOpenTag: 'Malformed open tag',
	malformedPI: 'Malformed ProcessingInstruction',
	malformedRemainder: 'Ended with unparseable remainder',
	malformedTextDecl: 'External DTD text declaration malformed',
	malformedXMLDecl: 'XML declaration was malformed',
	misplacedXMLDecl: 'XML declaration encountered in illegal position',
	mixedEnumNotAsterisk: 'An enumeration with #PCDATA must have * qualifier',
	multipleBodies: 'HTML document had multiple explicit or implied bodies.',
	multipleElements: 'Target was Element but multiple roots were found',
	multipleHeads: 'HTML document had multiple explicit or implied heads.',
	notElement: 'Target was Element, but that’s not what this is',
	unmatchableTag: name => `Close tag ‘${ name }’ had no matching open tag`,
	unmatchedTag: name => `Expected ‘${ name }’ tag close was not matched`,
	whatIsThisEven: 'Why is this here?',
	xmlDeclBadEnc: 'XML declaration has invalid encoding',
	xmlDeclBadSD: 'XML declaration has invalid standalone attribute',
	xmlDeclBadVers: 'XML declaration has missing or invalid version'
};
